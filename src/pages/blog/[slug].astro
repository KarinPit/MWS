---
import Navigation from "../../components/navigation.vue";
import ContactForm from "../../components/contactForm.vue";
import Footer from "../../components/footer.vue";
import "bootstrap/dist/css/bootstrap.css";
import "../../../public/styles/navbar.css";
import "../../../public/styles/index.css";
import "../../../public/styles/viewPost.css";
import "../../../public/styles/contactForm.css";
import { marked } from "marked";

const response = await fetch(
  "https://mws-data-280b2464bf34.herokuapp.com/api/blogs?populate=*"
);
const { data } = await response.json();
const { slug } = Astro.params;
const page = data.find((project) => project.attributes.title === slug);
if (!page) return Astro.redirect("/404");

function convertToMarkdown(contentArray) {
  let markdownContent = "";

  contentArray.forEach((item) => {
    if (item.type === "text") {
      let text = item.text;

      // Apply formatting based on item properties
      if (item.bold) text = `**${text}**`;
      if (item.underline) text = `<u>${text}</u>`;
      if (item.strikethrough) text = `~~${text}~~`;
      if (item.italic) text = `*${text}*`;

      // Add formatted text to markdown content
      markdownContent += `${text}\n\n`;
    } else if (item.type === "list-item") {
      // Handle list items
      const listItemText = item.children
        .map((child) => {
          let listItem = child.text;
          // Apply formatting based on item properties
          if (child.bold) listItem = `**${listItem}**`;
          if (child.underline) listItem = `<u>${listItem}</u>`;
          if (child.strikethrough) listItem = `~~${listItem}~~`;
          return listItem;
        })
        .join(" ");

      // Add list items to markdown content
      markdownContent += `- ${listItemText}\n\n`;
    }
  });

  return markdownContent.trim(); // Remove trailing newline
}

const toMark = page.attributes.content.flatMap((content) => content.children);
console.log(toMark);
const markdownText = convertToMarkdown(toMark);
const renderedHTML = marked(markdownText);
const { id, attributes } = page;
---

<!DOCTYPE html>
<html lang="he">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="icon" type="image/svg+xml" href="/images/Favicon-new.svg" />
    <title>MWS Studio</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Alegreya+Sans+SC:wght@900&family=Assistant:wght@200;300;400;500;600;700;800&display=swap"
      rel="stylesheet"
    />
    <title>{attributes.title}</title>
  </head>
  <body>
    <header>
      <Navigation client:load />
    </header>
    <main>
      <div class="row text-center">
        <div id="post-area">
          <div class="post-desc">
            <a class="back-btn" href="/blog"
              ><btn><img src="/images/arrow-right.svg" />בחזרה לבלוג</btn></a
            >
            <h2>{attributes.title}</h2>
            <pre><p set:html={renderedHTML} /></pre>
          </div>
        </div>
      </div>
      <div class="row beige-background p-5">
        <ContactForm client:load />
      </div>
      <Footer client:load />
    </main>
  </body>
</html>

<script
  src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js"
  integrity="sha384-zYPOMqeu1DAVkHiLqWBUTcbYfZ8osu1Nd6Z89ify25QV9guujx43ITvfi12/QExE"
  crossorigin="anonymous"></script>
<script
  src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.min.js"
  integrity="sha384-Y4oOpwW3duJdCWv5ly8SCFYWqFDsfob/3GkgExXKV4idmbt98QcxXYs9UoXAB7BZ"
  crossorigin="anonymous"></script>
<script></script>
